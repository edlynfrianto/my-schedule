function onOpen(e) {
  var ui = SpreadsheetApp.getUi();
  
  ui.createMenu("Merakyat Insales").addItem("Get Emails","getGmailEmails").addToUi();
}

// need to get a function whereby it clears everything in the google sheet
// before we do this particular code. this can be done by removing the label
function doGet(){
  
  
  var label = GmailApp.getUserLabelByName("ToBeProcessedByGAS");
  var threads = label.getThreads();
  
  for(var i = threads.length - 1; i >= 0; i--){
    var messages = threads[i].getMessages();
    
    for (var j = 0; j < messages.length; j++){
      var message = messages[j];
      //extractDetails(message);
      if (message.isUnread()){
        extractDetails(message);
        GmailApp.markMessageRead(message);
      }
    }
    // remove label
    //threads[i].removeLabel(label);
  }
}

function extractDetails(message){
  
  /*
  
  Need to filter checkpoint or schedule. Do all schedule first and then do checkpoint
  after one round of schedule. Add another tab that is status which has options:
  - Pending (if google's Date < appointmentDate)
  - On Time (if checkpoint overwrites same schedule code)
  - Late (if checkpoint currDate >> schedule appointment date)
  - Absent (if schedule not overwritten after 3 days)
  */
  
  
  
  var emailData = {
    date: "Null",
    salesperson: "Null",
    doctor: "Null",
    visitDate: "Null",
    visitTime: "Null",
  }
  
  emailData.date = message.getDate();
  emailData.body = message.getPlainBody();
  emailData.subject = message.getSubject();
  
  var sched = emailData.subject.indexOf("SCHED");
  var check = emailData.subject.indexOf("CHECK");
  if(sched > -1){
    // If scheduling [DONE except for time]
    var tmp;
    var timeReal;
    var hourReal;
    var minuteReal;
    tmp = emailData.body.match(/Nama \* : \s*([A-Za-z0-9\s]+)(\r?\n)/);
    var salesperson = (tmp && tmp[1]) ? tmp[1].trim() : 'Tidak ada nama sales';
    
    tmp = emailData.body.match(/Kode Dokter \* : \s*([A-Za-z0-9@.]+)(\r?\n)/);
    var doctor = (tmp && tmp[1]) ? tmp[1].trim() : 'Tidak ada nama dokter';
    
    tmp = emailData.body.match(/\d{2}[\s-]{0,1}\d{2}[\s-]{0,1}\d{4}(\W|$)/);
    var appointmentDate = (tmp && tmp[1]) ? tmp[0].trim() : 'Tidak ada tanggal kunjungan';
    
    tmp = emailData.body.match(/\d+[:]\d{2}../);
    var appointmentTime = (tmp && tmp[0]) ? tmp[0].trim() : 'Tidak ada waktu kunjungan';
    
    var pm = tmp[0].trim().indexOf("P");
    if(pm > -1){
      timeReal = emailData.body.match(/\d+[:]\d{2}/)[0].trim();
      hourReal = Number(timeReal.split(":")[0]) + 12;
      minuteReal =timeReal.split(":")[1];
      timeReal = hourReal + ":" + minuteReal;
      appointmentTime = timeReal;
    }else{
      timeReal = emailData.body.match(/\d+[:]\d{2}/)[0].trim();
      appointmentTime = timeReal;
    }
    //tmp = emailData.body.match(/\b([1-9]|[12][0-9]|3[0-2])\b[:]\b([1-9]|[12][0-9]|3[0-2])\b/);
    //var appointmentTime = (tmp && tmp[0]) ? tmp[0].trim() : 'Tidak ada waktu kunjungan';
    var status = "Pending";
    var sheet = SpreadsheetApp.getActiveSpreadsheet().getActiveSheet();
    Logger.log(sheet.getSheetName());
    sheet.appendRow([appointmentDate, salesperson, doctor, appointmentTime, ,status,emailData.date]);
  }else if(check > -1){
    // If checkpoint
    var tmp;
    var emailDate = emailData.date + '';
    var bulan = emailDate.split(" ")[1];
    var tanggal = emailDate.split(" ")[2];
    var tahun = emailDate.split(" ")[3];
    var emailTime = emailDate.split(" ")[4];
    var emailHour = emailTime.split(":")[0];
    var emailMinute = emailTime.split(":")[1];
    var appointmentHour = 0;
    var appointmentMinute = 0;
    
    // ngecek tanggal 
    var tanggalFull = tanggal + "/" + bulan +"/"+ tahun;
    var rows = SpreadsheetApp.getActiveSheet().getDataRange().getValues();
    var potentialCorrect = [];
    var i;
    
    for( i = 1; i < rows.length; i++){
      
      var checking = rows[i][0] + ' ';
      var checkingDate = checking.split(' ')[2];
      var checkingMonth = checking.split(' ')[1];
      var checkingYear = checking.split(' ')[3];
     
      if(checkingDate == tanggal && checkingMonth==bulan && checkingYear == tahun){
        
        potentialCorrect.push(i);
      }
    }
    
    
    var cell = ' ';
    var appointmentTime = 'someString';
    tmp = emailData.body.match(/Nama \* : \s*([A-Za-z0-9\s]+)(\r?\n)/);
    var salesperson = (tmp && tmp[1]) ? tmp[1].trim() : 'Tidak ada nama sales';
    
    tmp = emailData.body.match(/Kode Dokter \* : \s*([A-Za-z0-9@.]+)(\r?\n)/);
    var doctor = (tmp && tmp[1]) ? tmp[1].trim() : 'Tidak ada nama dokter';
    
    for(var j = 0; j < potentialCorrect.length; j++){
      var index = potentialCorrect[j];
      if(salesperson == rows[index][1] && doctor == rows[index][2]){
        // then change the status to ok with condition
        // if time is more than 1 hour than the waktu schedule, its late
        var waktuTelat = 1; // 1 hour
        appointmentTime = 'shoeStrin';
        //appointmentTime += rows[index][3] + " ";
        var appointmentHour = appointmentTime.split(" ")[4].split(":")[0];
        var appointmentMinute = appointmentTime.split(" ")[4].split(":")[1];
        cell = 'F' + (index + 1).toString();
        
        if(Number(emailHour) > (Number(appointmentHour) + waktuTelat)){
           SpreadsheetApp.getActiveSheet().getRange(cell).setValue('Telat');
        }
        else if(emailHour > (appointmentHour)){
          if(emailMinute > appointmentMinute){
            SpreadsheetApp.getActiveSheet().getRange(cell).setValue('Telat');
          }
          else{
            SpreadsheetApp.getActiveSheet().getRange(cell).setValue('Sukses');
          }
        }
        else{
          SpreadsheetApp.getActiveSheet().getRange(cell).setValue('Sukses');
        }
        var sheet = SpreadsheetApp.getActiveSpreadsheet().getActiveSheet();
        sheet.appendRow([cell,rows[index][3],appointmentTime, appointmentHour, appointmentMinute, emailHour, potentialCorrect.length, potentialCorrect[0],rows[4][1]]);
      }
    }
  }
  
}